v<major>.<current format>.<current format sub>

v1.0.0 : Setup the header constants and created the streams.
v1.1.0 : Support for .ttarch2 finished
v1.1.1 : Added all encryption keys from ttarchext, setup the ids
v1.1.2 : Library handlers setup
v1.1.3 : Integrated the Oodle Compression
v1.1.4 : Fixed a problem with the chunk sizes
v1.1.5 : Started work on the .ttarch 
v1.1.6 : Ttarch versions 0 and 1 support
v1.1.7 : Ttarch version 2 support
v1.1.8 : Ttarch versions 3,4,7 added
v1.1.9 : Ttarch versions 8 and 9 support added, fixed a problem with the nametable compression.
v1.2.0 : Support for .ttarch and .ttarch2 reading and opening finished. - Release
v1.2.1 : Byte output streams support (byteoutstream), base for flushing ttarchives back to a .ttarch/.ttarch2
v1.2.2 : File out streams
v1.2.3 : Flushable entries and archives, and converting and creation methods. No archive flush yet.
v1.2.4 : Ttarch2 flushing works
v1.2.5 : Added the oodle compression (OodleLZ_Compress) option - Release
v1.2.6 : Flushable ttarch (not ttarch2) entries, no TTArchive_Flush
v1.2.7 : Fixed decompression problems when opening various .ttarch archives
v1.2.8 : Support for flushing ttarch version 0 and fixed a small error with some ttarch opening in ttarch version 2s.
v1.2.9 : Restructured how Ttarchive loading is managed. No more flushables, its all in a TTArchiveEntry and TTArchive. Made the API simpler.
v1.5.0 : Bug fixes
v1.6.0 : Restructured and renamed functions for libtelltale.h
v1.6.5 : Created ClassAccess for wrapper functions to access from external languages 
v1.8.0 : DCArray & SArray
v1.9.0 : Finished TTContexts implementation
v1.9.5 : Added write functions to ttcontext
v1.9.8 : Fixed memory leaks 
v2.0.0 : Fixed remaining bugs and tested successfully
v2.0.5 : C# Implementation of the library, support for ttarchives/meta streams.
v2.1.0 : .vers (Vers) file format support, including base classes for CRC to strings mappings
v2.1.5 : More string mappings to CRC lookups
v2.1.9 : Updated and fixed bugs for c# implementation
v2.2.0 : Tested .vers and meta stream flushing : Release
v2.2.1 : Fixed c# Dispose helper functions
v2.2.2 : Fixed bugs for reading version 3 .ttarch2 archives (wolf among us)
v2.2.5 : TTArchiveOrTTArchive2 struct implemented, making it easier for passing one variable which represents an archive
v2.3.0 : TTContext patch & Rewrite
v2.3.2 : Blowfish encryption support added for external access
v2.3.3 : Resource descriptions support for encrypting and decrypting them
v2.3.4 : Lua script decryption for directly loading scripts instead of from archives (which is automatic)
v2.3.5 : Removed support for .ttarch archive version 9s (reading) due to multiple errors with the unknown value. Fix in the future maybe.
v2.3.7 : Meta streams fix for removing 'class ' and 'struct ' prefixed for Meta Binary versions.
v2.3.9 : HandleObjectInfo created and integrated DCArray, SArray into it
v2.4.0 : Baseclass_ContainerInterface from Telltale, to act as a base for containers
v2.4.5 : Input Mapper support for reading all versions from any game
v2.5.0 : Input Mapper support finished - Added writing them and mapping editing.
v2.5.2 : C# Implementation for all of the new functions and data types
v2.5.3 : Game flags support for getting game flags using LibTelltale_GetGameFlags which describe specific attibutes for each game.
v2.5.4 : Patches for release : Release
v2.5.5 : Patched clear entries for archives, it now frees the memory
v2.5.6 : Added the encryption key for The Walking Dead: The Final Season
v2.5.7 : Started on PropertySets (.prop)
v2.5.8 : PropertySet reading (all versions) - Not bug tested
v2.5.9 : PropertySet writing mostly done, implemented CRCs and all thats left is to create all the classes for each data type
v2.6.0 : Added all the Handle<T> object types into both the c++ and c# library
v2.6.5 : Added over 50 more propertyset types
v2.6.6 : Added 20+ enum types, which are all int values and require you to figure the enum types to ints
v2.6.7 : Telltale's ScriptEnumManager types, with format 'scriptenum:x' where x makes it for example 'scriptenum:

